% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/asContinuous.R
\name{asContinuous}
\alias{asContinuous}
\title{asContinuous}
\usage{
asContinuous(net)
}
\arguments{
\item{net}{an object of the class "BooleanNetwork" as that obtained by loadNetwork() 
BoolNet function}
}
\value{
an allready to use function to pass as argument to ODE() fun parameter, or to use
in combination with squad()
}
\description{
asContinuous transforms a boolean regulatory network model in BooleanNet format to 
a continuous model object that can be supplied to ode() function from deSolve R package
Algorithm:
extract w vector of parameters w_i through the application of fuzzy logic functions
according to the Boolean functions of the network.
Return f(w). Where f is the generic SQUAD function (see SQUAD() function in this script
for the definition).
}
\details{
The continuous network object retrieved by the function represent a system of ordinary 
equations according to the methodology described in Mart\'inez-Sosa, 2013 \cite{martinez2013}. 
This methodology have the same fixed point attractors of that in the Boolean model but have the 
advantage that it takes into account kinetic parameters.
}
\examples{
> data(cellCycle)
# setting initial state
state <- generateState(cellCycle,specs=c("CycA"=1,"CycD"=1))
# setting intervals for numerical integration 
times <- seq(min=0,max=1,seq.out=100)
cellCycle.s <- asContinuous(cellCycle) 
simulations <- ode(y=state, fun=cellCycle.s$fun, times=times,
                   parameters = "default") 
# note that cellCycle$fun can be given as the function
# parameter to ode solver method 
simulations
}
